"use client"
var w=Object.create;var f=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var W=Object.getOwnPropertyNames;var $=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var M=(t,n)=>{for(var e in n)f(t,e,{get:n[e],enumerable:!0})},b=(t,n,e,s)=>{if(n&&typeof n=="object"||typeof n=="function")for(let r of W(n))!L.call(t,r)&&r!==e&&f(t,r,{get:()=>n[r],enumerable:!(s=I(n,r))||s.enumerable});return t};var _=(t,n,e)=>(e=t!=null?w($(t)):{},b(n||!t||!t.__esModule?f(e,"default",{value:t,enumerable:!0}):e,t)),P=t=>b(f({},"__esModule",{value:!0}),t);var K={};M(K,{Balancer:()=>B,Provider:()=>H,default:()=>V});module.exports=P(K);var i=_(require("react"));var c=_(require("react")),E=typeof window=="undefined",m=E?c.default.useEffect:c.default.useLayoutEffect,S=0,Y=()=>++S,R=!1;function A(){let[t,n]=c.default.useState(R?Y:void 0);return m(()=>{t===void 0&&n(++S),R=!0},[]),t===void 0?t:`rwb-${t.toString(32)}`}function T(){return c.default.useMemo(()=>"useId"in c.default?c.default.useId:A,[])()}var y="__wrap_b",p="__wrap_n",v="__wrap_o",g=(t,n,e)=>{e=e||document.querySelector(`[data-br="${t}"]`);let s=e.parentElement,r=O=>e.style.maxWidth=O+"px";e.style.maxWidth="";let o=s.clientWidth,u=s.clientHeight,a=o/2-.25,l=o+.5,d;if(o){for(r(a),a=Math.max(e.scrollWidth,a);a+1<l;)d=Math.round((a+l)/2),r(d),s.clientHeight===u?l=d:a=d;r(l*n+o*(1-n))}e.__wrap_o||(typeof ResizeObserver!="undefined"?(e.__wrap_o=new ResizeObserver(()=>{self.__wrap_b(0,+e.dataset.brr,e)})).observe(s):process.env.NODE_ENV==="development"&&console.warn("The browser you are using does not support the ResizeObserver API. Please consider add polyfill for this API to avoid potential layout shifts or upgrade your browser. Read more: https://github.com/shuding/react-wrap-balancer#browser-support-information"))},N=g.toString(),C='(self.CSS&&CSS.supports("text-wrap","balance")?1:2)',h=(t,n,e="")=>(e&&(e=`self.${p}!=1&&${e}`),i.default.createElement("script",{suppressHydrationWarning:!0,dangerouslySetInnerHTML:{__html:(t?"":`self.${p}=self.${p}||${C};self.${y}=${N};`)+e},nonce:n})),x=i.default.createContext(!1),H=({nonce:t,children:n})=>i.default.createElement(x.Provider,{value:!0},h(!1,t),n),B=({ratio:t=1,nonce:n,children:e,...s})=>{let r=T(),o=i.default.useRef(),u=i.default.useContext(x),a=s.as||"span";return m(()=>{self[p]!==1&&o.current&&(self[y]=g)(0,t,o.current)},[e,t]),m(()=>{if(self[p]!==1)return()=>{if(!o.current)return;let l=o.current[v];l&&(l.disconnect(),delete o.current[v])}},[]),process.env.NODE_ENV==="development"&&e&&!Array.isArray(e)&&typeof e=="object"&&"type"in e&&typeof e.type=="string"&&e.type!=="span"&&console.warn(`<Balancer> should not wrap <${e.type}> inside. Instead, it should directly wrap text or inline nodes.

Try changing this:
  <Balancer><${e.type}>content</${e.type}></Balancer>
To:
  <${e.type}><Balancer>content</Balancer></${e.type}>`),i.default.createElement(i.default.Fragment,null,i.default.createElement(a,{...s,"data-br":r,"data-brr":t,ref:o,style:{display:"inline-block",verticalAlign:"top",textDecoration:"inherit",textWrap:"balance"},suppressHydrationWarning:!0},e),h(u,n,`self.${y}("${r}",${t})`))};if(!E&&process.env.NODE_ENV!=="production"){let t=document.querySelector("[data-next-hide-fouc]");if(t){let n=s=>{for(let r of s)for(let o of Array.from(r.removedNodes)){if(o!==t)continue;e.disconnect();let u=document.querySelectorAll("[data-br]");for(let a of Array.from(u))self[y](0,+a.dataset.brr,a)}},e=new MutationObserver(n);e.observe(document.head,{childList:!0})}}var V=B;0&&(module.exports={Balancer,Provider});
//# sourceMappingURL=index.js.map