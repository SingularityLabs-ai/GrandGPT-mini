"use client"
import i from"react";import c from"react";var y=typeof window=="undefined",f=y?c.useEffect:c.useLayoutEffect,b=0,h=()=>++b,E=!1;function x(){let[t,r]=c.useState(E?h:void 0);return f(()=>{t===void 0&&r(++b),E=!0},[]),t===void 0?t:`rwb-${t.toString(32)}`}function _(){return c.useMemo(()=>"useId"in c?c.useId:x,[])()}var m="__wrap_b",p="__wrap_n",R="__wrap_o",S=(t,r,e)=>{e=e||document.querySelector(`[data-br="${t}"]`);let s=e.parentElement,a=g=>e.style.maxWidth=g+"px";e.style.maxWidth="";let n=s.clientWidth,u=s.clientHeight,o=n/2-.25,l=n+.5,d;if(n){for(a(o),o=Math.max(e.scrollWidth,o);o+1<l;)d=Math.round((o+l)/2),a(d),s.clientHeight===u?l=d:o=d;a(l*r+n*(1-r))}e.__wrap_o||(typeof ResizeObserver!="undefined"?(e.__wrap_o=new ResizeObserver(()=>{self.__wrap_b(0,+e.dataset.brr,e)})).observe(s):process.env.NODE_ENV==="development"&&console.warn("The browser you are using does not support the ResizeObserver API. Please consider add polyfill for this API to avoid potential layout shifts or upgrade your browser. Read more: https://github.com/shuding/react-wrap-balancer#browser-support-information"))},B=S.toString(),O='(self.CSS&&CSS.supports("text-wrap","balance")?1:2)',T=(t,r,e="")=>(e&&(e=`self.${p}!=1&&${e}`),i.createElement("script",{suppressHydrationWarning:!0,dangerouslySetInnerHTML:{__html:(t?"":`self.${p}=self.${p}||${O};self.${m}=${B};`)+e},nonce:r})),v=i.createContext(!1),M=({nonce:t,children:r})=>i.createElement(v.Provider,{value:!0},T(!1,t),r),w=({ratio:t=1,nonce:r,children:e,...s})=>{let a=_(),n=i.useRef(),u=i.useContext(v),o=s.as||"span";return f(()=>{self[p]!==1&&n.current&&(self[m]=S)(0,t,n.current)},[e,t]),f(()=>{if(self[p]!==1)return()=>{if(!n.current)return;let l=n.current[R];l&&(l.disconnect(),delete n.current[R])}},[]),process.env.NODE_ENV==="development"&&e&&!Array.isArray(e)&&typeof e=="object"&&"type"in e&&typeof e.type=="string"&&e.type!=="span"&&console.warn(`<Balancer> should not wrap <${e.type}> inside. Instead, it should directly wrap text or inline nodes.

Try changing this:
  <Balancer><${e.type}>content</${e.type}></Balancer>
To:
  <${e.type}><Balancer>content</Balancer></${e.type}>`),i.createElement(i.Fragment,null,i.createElement(o,{...s,"data-br":a,"data-brr":t,ref:n,style:{display:"inline-block",verticalAlign:"top",textDecoration:"inherit",textWrap:"balance"},suppressHydrationWarning:!0},e),T(u,r,`self.${m}("${a}",${t})`))};if(!y&&process.env.NODE_ENV!=="production"){let t=document.querySelector("[data-next-hide-fouc]");if(t){let r=s=>{for(let a of s)for(let n of Array.from(a.removedNodes)){if(n!==t)continue;e.disconnect();let u=document.querySelectorAll("[data-br]");for(let o of Array.from(u))self[m](0,+o.dataset.brr,o)}},e=new MutationObserver(r);e.observe(document.head,{childList:!0})}}var P=w;export{w as Balancer,M as Provider,P as default};
//# sourceMappingURL=index.mjs.map